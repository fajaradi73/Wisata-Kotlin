apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'


android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "com.fajarproject.travels"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0-build${getDate()}"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }


    useLibrary 'org.apache.http.legacy'

    packagingOptions {
        exclude 'AndroidManifest.xml'
        exclude 'lib/arm64-v8a/libcardioDecider.so'
        exclude 'lib/arm64-v8a/libcardioRecognizer.so'
        exclude 'lib/arm64-v8a/libcardioRecognizer_tegra2.so'
        exclude 'lib/arm64-v8a/libopencv_core.so'
        exclude 'lib/arm64-v8a/libopencv_imgproc.so'
        exclude 'lib/armeabi/libcardioDecider.so'
        exclude 'lib/armeabi-v7a/libcardioDecider.so'
        exclude 'lib/armeabi-v7a/libcardioRecognizer.so'
        exclude 'lib/armeabi-v7a/libcardioRecognizer_tegra2.so'
        exclude 'lib/armeabi-v7a/libopencv_core.so'
        exclude 'lib/armeabi-v7a/libopencv_imgproc.so'
        exclude 'lib/mips/libcardioDecider.so'
        exclude 'lib/x86/libcardioDecider.so'
        exclude 'lib/x86/libcardioRecognizer.so'
        exclude 'lib/x86/libcardioRecognizer_tegra2.so'
        exclude 'lib/x86/libopencv_core.so'
        exclude 'lib/x86/libopencv_imgproc.so'
        exclude 'lib/x86_64/libcardioDecider.so'
        exclude 'lib/x86_64/libcardioRecognizer.so'
        exclude 'lib/x86_64/libcardioRecognizer_tegra2.so'
        exclude 'lib/x86_64/libopencv_core.so'
        exclude 'lib/x86_64/libopencv_imgproc.so'
    }
}

static def getDate() {
    def date = new Date()
    def formattedDate = date.format('yyyyMMddHHmmss')
    return formattedDate
}

dependencies {
    implementation 'com.android.support:multidex:1.0.3'
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    //noinspection GradleCompatible
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.12'
    //noinspection GradleCompatible
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    ////// androidx
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.coordinatorlayout:coordinatorlayout:1.1.0'
    implementation 'androidx.vectordrawable:vectordrawable:1.1.0'
    implementation "androidx.preference:preference-ktx:1.1.0"
    implementation 'androidx.core:core-ktx:1.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    /**/// get data json to Spinner
    implementation 'com.squareup.okhttp3:logging-interceptor:3.12.0'
    implementation 'com.jakewharton:butterknife:10.0.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.0.0'
    ///// JWT Decode Token
    api 'io.jsonwebtoken:jjwt-api:0.10.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.10.5'
    runtimeOnly('io.jsonwebtoken:jjwt-orgjson:0.10.5') {
        exclude group: 'org.json', module: 'json' //provided by Android natively
    }
    //////glide
    implementation 'com.github.bumptech.glide:glide:4.9.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.9.0'
    implementation('com.github.bumptech.glide:okhttp3-integration:4.7.1') {
        exclude group: 'glide-parent'
    }
    ///////// Retrofit
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'com.squareup.retrofit2:retrofit:2.5.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.5.0'
    implementation 'com.squareup.retrofit2:converter-scalars:2.3.0'
    implementation "com.squareup.retrofit2:converter-jackson:2.4.0"
    //////// Rx Java
    implementation 'io.reactivex:rxjava:1.3.4'
    implementation 'io.reactivex:rxandroid:1.1.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava:2.5.0'
    implementation 'javax.annotation:javax.annotation-api:1.2'

    //////// Firebase
    implementation 'com.google.firebase:firebase-messaging:20.1.0'
    implementation 'com.google.firebase:firebase-core:17.2.1'
    implementation 'com.google.firebase:firebase-auth:19.2.0'
    implementation 'com.google.android.gms:play-services-auth:17.0.0'
    implementation 'com.google.firebase:firebase-analytics:17.2.1'
    implementation 'com.google.firebase:firebase-database:19.2.0'
    //////// Camera Scan Text and number
    implementation 'com.google.android.gms:play-services-vision:19.0.0'
    // Google MAPS
    implementation 'com.google.android.gms:play-services-maps:17.0.0'
    // Auto Complete Place & location
    implementation 'com.google.android.gms:play-services-places:17.0.0'
    implementation 'com.google.android.gms:play-services-location:17.0.0'
    implementation 'com.google.maps.android:android-maps-utils:0.5'
    //////// Permession
    implementation 'gun0912.ted:tedpermission:2.2.2'
    ///skeleton
    implementation 'com.ethanhua:skeleton:1.1.2'
    implementation 'io.supercharge:shimmerlayout:2.1.0'
    implementation 'com.facebook.shimmer:shimmer:0.1.0@aar'
    //// Picasso
    implementation 'com.squareup.picasso:picasso:2.71828'

    //// Shape of View
    implementation 'com.github.florent37:shapeofview:1.3.2'

    //// google direction
    implementation 'com.akexorcist:googledirectionlibrary:1.0.5'

    //// Loading
    implementation 'com.github.ybq:Android-SpinKit:1.2.0'

    //// fab speed dial
    implementation 'io.github.yavski:fab-speed-dial:1.0.6'

    //// ads
    implementation 'com.google.android.gms:play-services-ads:18.3.0'
    implementation 'com.google.firebase:firebase-ads:18.3.0'
    implementation project(':NativeTemplatesAndroid-1.0.0')
    //// Like Button
    implementation 'com.github.jd-alexander:LikeButton:0.2.3'
    ///// facebook
    implementation 'com.facebook.android:facebook-android-sdk:4.40.0'

    ///// Power Menu
    implementation "com.github.skydoves:powermenu:2.1.2"

    ///// Slider Layout
    implementation 'com.github.smarteist:autoimageslider:1.3.2'

    ////Shape View
    implementation 'com.github.florent37:shapeofview:1.3.2'

    ////Pretty Time
    implementation 'org.ocpsoft.prettytime:prettytime:4.0.1.Final'

    //// Parceled
    implementation 'org.parceler:parceler-api:1.1.12'
    annotationProcessor 'org.parceler:parceler:1.1.12'

    ////Zoom Image
    implementation 'com.jsibbold:zoomage:1.2.0'
    implementation 'com.bogdwellers:pinchtozoom:0.1'

    //// Round Corner Progress Bar
    implementation 'com.akexorcist:RoundCornerProgressBar:2.0.3'

    ///// Image Crop
    api 'com.theartofdev.edmodo:android-image-cropper:2.7.0'

    //// Photo Picker
    implementation "com.github.ChiliLabs:ChiliPhotoPicker:0.3.1"


}
apply plugin: 'com.google.gms.google-services'
